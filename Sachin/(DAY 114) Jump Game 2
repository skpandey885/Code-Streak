// QUESTION LINK: https://leetcode.com/problems/jump-game-ii/


class Solution {
    int dp[] = new int[10000];

    public int jump(int[] nums) {
        for (int i = 0; i < dp.length; i++) dp[i] = -1;

        int jumpd = solve(nums, 0);

        return jumpd;
    }

    int solve(int nums[], int idx) {
        if (idx >= nums.length) return 100000;

        if (idx == nums.length - 1) {
            return 0;
        }

        if (dp[idx] != -1) return dp[idx];

        int min = 100000;

        for (int i = 1; i <= nums[idx]; i++) {
            min = Math.min(min, 1 + solve(nums, idx + i));
        }

        dp[idx] = min;
        return min;
    }
}
