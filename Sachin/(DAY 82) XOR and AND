// QUESTION LINK: https://www.codechef.com/START31C/problems/XORAND/
// TC: O(NLOGN) SC: O(N)   

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */

 class FastReader 
    { 
        BufferedReader br; 
        StringTokenizer st; 

        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 

        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 

        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 

        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 

        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 

        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    } 



 class Forces

{


	public static void main (String[] args) throws java.lang.Exception
	{
	
	try{
	    OutputStream outputStream =System.out;
        PrintWriter out =new PrintWriter(outputStream);
        FastReader input =new FastReader();

       int t=input.nextInt();
   
    while(t-->0){
        int n=input.nextInt();
        
        long arr[]=new long[n];

        for(int i=0;i<n;i++)
        arr[i]=input.nextLong();

        Arrays.sort(arr);

        long sum=0;
       long count=0;

        for(int i=1;i<n;i++){
            long a=binlog(arr[i-1]);
            long b=binlog(arr[i]);
            
            if(a==b){
                count++;
            }else{
                sum+=((count*(count+1))/2);
                count=0;
            }
            
        }
        
        sum+=((count*(count+1))/2);
     
        System.out.println(sum);
   
    }
    
	}catch(Exception e){
	    return;
	}
	
	
	}

  public static long binlog( long bits ) 
  {
      int log = 0;
      if( ( bits & 0xffff0000 ) != 0 ) { bits >>>= 16; log = 16; }
      if( bits >= 256 ) { bits >>>= 8; log += 8; }
      if( bits >= 16  ) { bits >>>= 4; log += 4; }
      if( bits >= 4   ) { bits >>>= 2; log += 2; }
      return log + ( bits >>> 1 );
  }
}
