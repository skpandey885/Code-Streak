// QUESTION LINK: https://leetcode.com/problems/merge-k-sorted-lists/
// TC: O(N^2) SC:O(N)

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public var val: Int
 *     public var next: ListNode?
 *     public init() { self.val = 0; self.next = nil; }
 *     public init(_ val: Int) { self.val = val; self.next = nil; }
 *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }
 * }
 */


class Solution {
    func mergeKLists(_ lists: [ListNode?]) -> ListNode? {
        
        var values=[Int]()
        
      var i=0
        
        while(i<lists.count){
            
            var head=lists[i]
            
            while(head != nil)
            {
               values.append(head!.val)  
                head=head!.next
            }
            
            i+=1
        }
        
       values.sort()   

        let temp=ListNode(0)
        var dummy : ListNode?=temp
        
        values.forEach { (value) in
          dummy?.next=ListNode(value)
          dummy=dummy?.next                   
        }
        
       return temp.next;
   
        
    }
}
