// QUESTION LINK: https://leetcode.com/problems/edit-distance/

class Solution {

    public int minDistance(String word1, String word2) {
        int m = word1.length(), n = word2.length();

        int dp[][] = new int[m + 1][n + 1];

        for (int i = 0; i < dp.length; i++) {
            for (int j = 0; j < dp[i].length; j++) {
                dp[i][j] = -1;
            }
        }

        return solve(word1, word2, m, n, dp);
    }

    int solve(String s1, String s2, int m, int n, int dp[][]) {
        if (m == 0) return n;

        if (n == 0) return m;

        if (dp[m][n] != -1) return dp[m][n];

        if (s1.charAt(m - 1) == s2.charAt(n - 1)) {
            return dp[m][n] = solve(s1, s2, m - 1, n - 1, dp);
        }

        return dp[m][n] = (1 + Math.min(solve(s1, s2, m - 1, n - 1, dp), Math.min(solve(s1, s2, m, n - 1, dp), solve(s1, s2, m - 1, n, dp))));
    }
}



