// QUESTION LINK: https://practice.geeksforgeeks.org/problems/permutations-of-a-given-string2041/1/#


import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
	public static void main(String[] args) throws IOException
	{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while(t-->0)
        {
            String S = br.readLine().trim();
            Solution obj = new Solution();
            List<String> ans = obj.find_permutation(S);
            for( int i = 0; i < ans.size(); i++)
            {
                System.out.print(ans.get(i)+" ");
            }
            System.out.println();
                        
        }
	}
}

// } Driver Code Ends


class Solution {
    public List<String> find_permutation(String S) {
        List<String> ls=new ArrayList<>();
        traverse("",S,ls);
        
        Collections.sort(ls);
        return ls;
    }
    
    void traverse( String asf, String S, List<String> ls){
        if(S.length()<1)
        {
            ls.add(asf);
            return;
        }
        
        for(int i=0;i<S.length();i++){
           String ch=String.valueOf(S.charAt(i));
           
           String sum1=S.substring(0,i);
           String sum2=S.substring(i+1);
           
           traverse(asf+ch,(sum1+sum2),ls);
        }
   
    }
    
    
 
    
    
    
}
