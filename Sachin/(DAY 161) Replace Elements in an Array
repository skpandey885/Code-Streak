// QUESTION LINK: https://leetcode.com/contest/weekly-contest-296/problems/replace-elements-in-an-array/

class Solution {
    public int[] arrayChange(int[] nums, int[][] operations) {
        
        Map<Integer, Integer> map=new HashMap<>();
   
       for(int i=0;i<nums.length;i++){
           map.put(nums[i],i);
       }
        
        
        for(int i=0;i<operations.length;i++){
            
            int a=operations[i][0];
            int b=operations[i][1];
            
            if(map.containsKey(a)){
                
                int idx=map.get(a);
                map.put(b,idx);
                map.put(a,Integer.MAX_VALUE);
            }

        }
        
        
       Map<Integer, Integer> hm1 = sortByValue(map);
       
        int i=0;
        
        int ans[]=new int[nums.length];
        
        for(int k: hm1.keySet()){
             if(i>=nums.length)
                 break;
            
            ans[i++]=k;
            
        }
        return ans;
     
        
    }
    
    
    
      HashMap<Integer, Integer> sortByValue(Map<Integer, Integer> hm)
    {
        // Create a list from elements of HashMap
        List<Map.Entry<Integer, Integer> > list
            = new LinkedList<Map.Entry<Integer, Integer> >(
                hm.entrySet());
 
     
        Collections.sort(
            list,
            (i1,
             i2) -> i1.getValue().compareTo(i2.getValue()));
 
    
        HashMap<Integer, Integer> temp
            = new LinkedHashMap<Integer, Integer>();
        for (Map.Entry<Integer, Integer> aa : list) {
            temp.put(aa.getKey(), aa.getValue());
        }
        return temp;
    }
 
}
