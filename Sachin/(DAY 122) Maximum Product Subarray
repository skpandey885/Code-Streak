// QUESTION LINK: https://leetcode.com/problems/maximum-product-subarray/
// TC: O(N)       SC:O(1)

class Solution {
    
    public int maxProduct(int[] nums) {
        int n = nums.length;

        int max = nums[0];
        int min = nums[0];
        int result = nums[0];

        if (n == 1) return nums[0];

        for (int i = 1; i < n; i++) {
            if (nums[i] < 0) {
                int temp = max;
                max = min;
                min = temp;
            }

            max = Math.max(nums[i], max * nums[i]);
            min = Math.min(nums[i], min * nums[i]);

            result = Math.max(max, result);
        }

        return result;
    }
}
