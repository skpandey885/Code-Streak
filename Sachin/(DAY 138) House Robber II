// QUESTION LINK: https://leetcode.com/problems/house-robber-ii/

class Solution {

    public int rob(int[] nums) {
        if (nums.length == 1) 
            return nums[0];
        
        int dp[]=new int[nums.length+1]; 
        
        Arrays.fill(dp, -1);
        
        int a = solve(0, nums, nums.length - 1, dp);
        
        Arrays.fill(dp, -1);
        
        int b = solve(1, nums, nums.length, dp);
        
        return Math.max(a, b);
    }
    
    

    int solve(int idx, int nums[], int n, int dp[]) {
        if (idx >= n) return 0;

        if (dp[idx] != -1) return dp[idx];

        int a = nums[idx] + solve(idx + 2, nums, n, dp);
        int b = solve(idx + 1, nums, n, dp);

        return dp[idx] = Math.max(a, b);
    }
}
