// QUESTION LINK: https://leetcode.com/problems/scramble-string/
// TC: EXPONENTIAL    SC:O(N) - MEMOIZATION

class Solution {
    Map<String, Boolean> mp = new HashMap<>();

    public boolean isScramble(String s1, String s2) {
        if (s1.length() != s2.length()) return false;
        return solve(s1, s2);
    }

    public boolean solve(String s1, String s2) {
        if (s1.equals(s2)) {
            return true;
        }
        if (s1.length() <= 1) {
            return false;
        }
        String key = s1 + " " + s2;
        if (mp.containsKey(key)) return mp.get(key);
        int n = s1.length();
        boolean flag = false;
        for (int i = 1; i <= n - 1; i++) {
            boolean c1 = (solve(s1.substring(0, i), s2.substring(n - i, n)) && solve(s1.substring(i, n), s2.substring(0, n - i)));
            boolean c2 = (solve(s1.substring(0, i), s2.substring(0, i)) && solve(s1.substring(i, n), s2.substring(i, n)));

            if (c1 || c2) {
                flag = true;
                break;
            }
        }
        mp.put(key, flag);
        return flag;
    }
}
