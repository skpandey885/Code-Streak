// QUESTION LINK - https://leetcode.com/problems/spiral-matrix/

class Solution {

    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> arr = new ArrayList<>();

        int m = matrix.length;
        int n = matrix[0].length;

        int top = 0, bottom = m - 1, left = 0, right = n - 1;
        int direction = 0;

        while (top <= bottom && left <= right) {
            if (direction == 0) {
                for (int i = left; i <= right; i++) arr.add(matrix[top][i]);

                top++;
            } else if (direction == 1) {
                for (int i = top; i <= bottom; i++) arr.add(matrix[i][right]);
                right--;
            } else if (direction == 2) {
                for (int i = right; i >= left; i--) arr.add(matrix[bottom][i]);

                bottom--;
            } else if (direction == 3) {
                for (int i = bottom; i >= top; i--) arr.add(matrix[i][left]);
                left++;
            }

            direction++;
            direction %= 4;
        }

        return arr;
    }
}
