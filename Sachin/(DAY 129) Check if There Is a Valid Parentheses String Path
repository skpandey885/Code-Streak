// QUESTION LINK: https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path/

class Solution {
    public boolean hasValidPath(char[][] grid) {
        
        int m=grid.length;
        int n=grid[0].length;
         Boolean dp[][][]=new Boolean[m+10][n+10][m+n+10];
        
        return solve(grid,0,0,0,dp);
    }
    
    
    boolean solve (char[][] grid,int i, int j,int ob, Boolean dp[][][]){
        
        int m=grid.length;
        int n=grid[0].length;

          
        if(ob<0 | i>=m | j>=n)
            return false;
        
        if(i==m-1 && j==n-1){
            
         if(grid[i][j]=='(')
        ob++;
        else
            ob--;
            
            
              if(ob==0)
                return true;     
            
            return false;  
        }
      
        
       if(dp[i][j][ob]!=null)
           return dp[i][j][ob];
    
        
        int jao=ob;
        
        if(grid[i][j]=='(')
            jao++;
        else
            jao--;
    
            
      boolean a=solve(grid,i+1,j,jao,dp);
      boolean b=solve(grid,i,j+1,jao,dp);
            
    boolean x=a || b;
  
        
         dp[i][j][ob]=x;
        
        return x;
 
       
    }
    

}
