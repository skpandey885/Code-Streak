// QUESTION LINK: https://leetcode.com/problems/n-ary-tree-level-order-traversal/


/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {

    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> ls = new ArrayList<>();

        if (root == null) return ls;

        Queue<Node> queue = new LinkedList<>();

        queue.add(root);

        while (!queue.isEmpty()) {
            int size = queue.size();

            List<Integer> arr = new ArrayList<>();

            for (int i = 0; i < size; i++) {
                Node curr = queue.poll();

                for (Node cc : curr.children) {
                    if (cc != null) queue.add(cc);
                }

                arr.add(curr.val);
            }

            ls.add(arr);
        }

        return ls;
    }
}
