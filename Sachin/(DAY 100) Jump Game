// QUESTION LINK: https://leetcode.com/problems/jump-game/
// TC: O(ARR[i]^N)     SC:O(N) - BRUTE FORCE (MEMOIZATION)

class Solution {
    public boolean canJump(int[] nums) {
        int max = Integer.MIN_VALUE;
        for (int i : nums) max = Math.max(i, max);

        Boolean dp[] = new Boolean[max + nums.length+100];

        for (int i = 0; i < dp.length; i++) dp[i] = null;

        return solve(0, nums, dp);
    }
    
    boolean solve(int idx, int nums[], Boolean dp[]) {
        int n = nums.length - 1;

        if (idx >= n) {
            if (idx == n) return true;

            return false;
        }

        if (dp[idx] != null) return dp[idx];

        boolean ans = false;
        for (int i = 1; i <= nums[idx]; i++) {
            ans = ans || solve(idx + i, nums, dp);
        }

        return dp[idx] = ans;
    }
}
