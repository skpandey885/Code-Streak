// QUESTION LINK: https://leetcode.com/problems/largest-rectangle-in-histogram/

class Solution {
    public int largestRectangleArea(int[] heights) {
        
        
        // TC: O(N)
        
        int n=heights.length;
        
        int lb[]=new int[n];
        int rb[]=new int[n];
        
       Stack<Integer> st=new Stack<>();    
        rb[n-1]=n;
        lb[0]=-1;
        
        st.push(n-1);

        
        for(int i=n-2;i>=0;i--){
           
            while(!st.isEmpty() && heights[st.peek()]>=heights[i])
                st.pop();
            
            if(st.isEmpty()){
                rb[i]=n;
            }else{
                rb[i]=st.peek();
            }
              st.push(i);
        }
        
        st.clear();
         st.push(0);
        
        for(int i=1;i<n;i++){
           
            while(!st.isEmpty() && heights[st.peek()]>=heights[i])
                st.pop();
            
            if(st.isEmpty()){
                lb[i]=-1;
            }else {
                lb[i]=st.peek();
            }
            st.push(i);
        }
        
        int curr=0,max=0;
        
        for(int i=0;i<n;i++){
            int width=rb[i]-lb[i]-1;
            curr=width*heights[i];
            max=Math.max(curr,max);
        }
        
        
        
        return max;
        
        
        
        
        
    }
}
