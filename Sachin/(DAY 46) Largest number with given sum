// QUESTION LINK: https://practice.geeksforgeeks.org/problems/largest-number-with-given-sum-1587115620/1/?track=DSASP-Greedy&batchId=154#

// { Driver Code Starts
import java.io.*;
import java.lang.*;
import java.util.*;

class Driverclass
{
    public static void main(String args[])throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        //testcases
		int t = Integer.parseInt(br.readLine().trim());
		
	    while(t-- >0)
	    {
	        String inputLine[] = br.readLine().trim().split(" ");
	        
	        //taking n and sum
            int n = Integer.parseInt(inputLine[0]);
            int sum = Integer.parseInt(inputLine[1]);
            
            //calling largestNumber() function
            System.out.println(new Solution().largestNumber(n, sum));
	    }
    }
}// } Driver Code Ends



class Solution
{
    //Function to return the largest possible number of n digits
    //with sum equal to given sum.
    static String largestNumber(int n, int sum)
    {
        
         if(n*9<sum)
         return "-1";
         
        String s="";
         int i=9;
     
     while(s.length()<n && i>0){
         int num=sum/i;
        
        for(int k=0;k<num;k++)
        s+=String.valueOf(i);
        sum-=(num*i);
        i--; 
     }
     
     if(s.length()<n){
         for(int l=s.length();l<n;l++){
             s+="0";
         }
         
     }else if(s.length()==0){
         return "-1";
     }
     
     return s;
        
    }
}


