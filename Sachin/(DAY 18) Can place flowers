// https://leetcode.com/problems/can-place-flowers/




class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
       
        
        
        // OPTIMAL CODE TC: O(N)
        
        int count=0;
        for(int i=0;i<flowerbed.length;i++){
            
            if(flowerbed[i]==0 && (i==0 || flowerbed[i-1]==0) && (i==flowerbed.length-1 || flowerbed[i+1]==0)){
                flowerbed[i]=1;
                count++;
             }
       
        }
        
        return count>=n;
        
        
        
        
        
        
        
        // MY CODE
        
//         int i=0;
        
//         if(n==0)
//             return true;
        
//         if(flowerbed.length==1)
//             if(flowerbed[0]==0 && n==1)
//                 return true;
//         else if(flowerbed[0]==1 && n==1)
//             return false;
    
        
//         if(flowerbed[0]==0 && flowerbed[1]==0){
//             flowerbed[0]=1;
//             n--;
//         }
//           if(flowerbed[flowerbed.length-1]==0 && flowerbed[flowerbed.length-2]==0){
//             flowerbed[flowerbed.length-1]=1;
//             n--;
//         }
        
//             for(i=1;i<flowerbed.length-1;i++){
//                 if(n<=0)
//                     break;
                
//                 if(flowerbed[i-1]==0 && flowerbed[i+1]==0 && flowerbed[i]==0){
//                        flowerbed[i]=1;
//                       n--;
//                 }
                  
//             }
        
        
            
//             if(i==flowerbed.length-1)
//                 if(n>0)
//              return false;
        
        
        
//         return true;
            
            
            
        
        
        
       
        
        
    }
}
