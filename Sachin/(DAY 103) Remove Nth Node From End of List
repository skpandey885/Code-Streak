// QUESTION LINK: https://leetcode.com/problems/remove-nth-node-from-end-of-list/


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
    if(head==null ){
        return null;
    }
        
        int size=1;
        ListNode x=head;
        
        while(x.next!=null){
            x=x.next;
            size++;
        }
        
         int remove=size-n,count=1;
        if(size==n){
            head=head.next;
        return head; }
    
        ListNode p=head;
        
        while(p.next!=null){
            if(count==remove){
                ListNode temp= p.next.next;
                p.next=temp;
            }
            else{
            p=p.next;
          }
            count++;
        }
        
        return head;
        
        
        
    }
}
