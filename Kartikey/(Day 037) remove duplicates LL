//https://leetcode.com/problems/remove-duplicates-from-sorted-list/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
       if(head == NULL || head -> next == NULL){ 
            return head;
        }
        //O(N)
        
        ListNode *first = head;
        ListNode *second = head->next;
        
        while(second != NULL){
            if(first->val == second->val){
                first -> next = second -> next;
                second = second -> next;               
                
                
            }
            else{
                first = second;
                second = second->next;
            }
        }
        return head;
    }
};
