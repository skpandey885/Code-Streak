// https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/
// two binary searches to fin two elements
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int l = 0, r = nums.size()-1, m, first = -1, last = -1;
       
        while(l <= r) {
            m = l + (r-l)/2;
            if (nums[m] == target) {
                first = m;
                r = m - 1;
            } else if (nums[m] < target) l = m + 1;
            else r = m - 1;
        }
        l = 0;
        r = nums.size() - 1;
       
        while (l <= r) {
            m = l + (r - l)/2;
            if (nums[m] == target) {
                last = m;
                l = m+1;
            } else if (nums[m] < target) l = m + 1;
            else r = m - 1;
        }
        return std::vector<int>{first, last};
    }
};
