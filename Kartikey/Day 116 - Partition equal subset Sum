//https://leetcode.com/problems/partition-equal-subset-sum/


adtiyaverma jindabaad


class Solution {
    
public:
    
    bool subsetSum(vector<int>& nums, int sum, int n){
    
        bool subset[n + 1][sum + 1];
     for (int i = 0; i <= n; i++)
        subset[i][0] = true;
 
   
   
    for (int i = 1; i <= sum; i++)
        subset[0][i] = false;
    
    
    
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= sum; j++) {
            if (j < nums[i - 1])
                subset[i][j] = subset[i - 1][j];
            if (j >=nums[i - 1])
                subset[i][j] = subset[i - 1][j]
                               || subset[i - 1][j -nums[i - 1]];
        }
    }
 
   

 
    return subset[n][sum];
    
}
    
    
    bool canPartition(vector<int>& nums) {
        int sum = 0;
        int n = nums.size();
        for(int i =0; i<n; i++){
            sum += nums[i];
            
        }
        
        if(sum %2 != 0){
            return false;
        }
        else{
     return subsetSum(nums, sum/2, n);
        }
    }
};
