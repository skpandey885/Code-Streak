//  https://leetcode.com/problems/odd-even-linked-list/









/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head || !head->next || !head->next->next) {
            return head;
        }
        // pahle odd aur even elements ko seperate karege then merge.
        
        
        else{
        ListNode *odd = head;
        ListNode *even = head->next;
        ListNode *count = head->next;
        
        while(odd->next && even->next){
            odd->next = even->next; 
            even->next = odd->next->next;  
            odd = odd->next;
            even = even->next;
        }
        odd->next = count;   
        return head; 
    }
    }
};

// tc: O(N)   sc: O(1)
